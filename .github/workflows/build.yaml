name: Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']

permissions:
    contents: write 

jobs:
    build:
        runs-on: macos-14
        steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: stable
            targets: aarch64-apple-darwin,x86_64-apple-darwin,aarch64-apple-ios,aarch64-apple-ios-sim,x86_64-apple-ios
        - run: brew install cbindgen

        - name: Run cargo build for each target
          run: make macos
        
        - name: Generate header file
          run: cbindgen --config cbindgen.toml --crate swift_rusty --output include/munchausen.h 
        
        - name: Create binary framework
          run: | 
            xcodebuild -create-xcframework \
            -library libs/libmunchausen-macos.a \
            -headers ./include/ \
            -output Munchausen.xcframework

        - run: zip -r framework.zip Munchausen.xcframework
        - run: openssl dgst -sha256 framework.zip
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: true
            prerelease: false

        -  name: Upload Release Asset
           id: upload-release-asset 
           uses: actions/upload-release-asset@v1
           env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
             upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
             asset_path: ./framework.zip
             asset_name: framework.zip
             asset_content_type: application/zip

        - name: Invoke workflow without inputs
          uses: peter-evans/repository-dispatch@v3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            repository: szkabaroli/SwiftRusty
            event-type: new-release
            client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'